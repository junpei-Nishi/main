module.exports = function(RED) {
    function PythonShellNode(config) {
        RED.nodes.createNode(this,config);
        this.name = config.name;
        this.pypath = config.pypath;
				this.dataname = config.dataname;
				this.cameraid = config.cameraid;
				this.size = config.size;
				this.cameraguide = config.cameraguide;
				this.mirror = config.mirror;

        var node = this;
        node.on("input", function(msg) {
            try {
                var {PythonShell} = require('python-shell'); 
								var argsarray = [];
								if(node.dataname){
										argsarray.push("-n"); argsarray.push(node.dataname);
								}
								if(node.cameraid){
										argsarray.push("-id"); argsarray.push(node.cameraid);
								}
								if(node.size){
										argsarray.push("-s"); argsarray.push(node.size);
								}
								if(node.cameraguide){
										argsarray.push("-g"); 
								}
								if(node.mirror){
										argsarray.push("-m");
								}
                let options = {
                    pythonPath: node.pypath, 
                    pythonOptions: ['-u'],
										scriptPath: '/Users/nishijunpei/Desktop/SDTest-Commercial-CUI-master',
										args: argsarray,
                };

                PythonShell.run('sample_inspection.py' , options, function (err) {
                    if (err) {
                        msg.payload = err;
                    } else {
                    		msg.payload = "finished";
                    }
                    node.send(msg);
                });
            } catch(err) {
                node.error(err.message);
            }
        });
    }
    RED.nodes.registerType("python-shell",PythonShellNode);
}
